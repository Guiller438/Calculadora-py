version: 2.1

orbs:
  slack: circleci/slack@4.12.5

jobs:
  test:
    docker:
      - image: cimg/python:3.12
    parallelism: 2
    steps:
      - checkout
      - run:
          name: Crear entorno virtual e instalar dependencias
          command: |
            python -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - run:
          name: Ejecutar pruebas con coverage
          command: |
            . venv/bin/activate
            coverage run -m pytest
      - run:
          name: Generar reporte HTML
          command: |
            . venv/bin/activate
            coverage html
      - store_artifacts:
          path: htmlcov
          destination: coverage-report

  flake8-check:
    docker:
      - image: cimg/python:3.12
    steps:
      - checkout
      - run:
          name: Ejecutar flake8
          command: |
            python -m venv venv
            . venv/bin/activate
            pip install flake8
            flake8 . --exit-zero
      - slack/notify:
          event: always
          channel: general-procesosdesoftware
          custom: |
            {
              "text": ":mag: *flake8 ejecutado* para `calculadora-proyecto`. Revisa advertencias si las hay."
            }

  requirements-review:
    docker:
      - image: cimg/python:3.12
    steps:
      - checkout
      - run:
          name: Verificar si los paquetes están desactualizados
          command: |
            python -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
            pip list --outdated > outdated.txt
            cat outdated.txt
      - store_artifacts:
          path: outdated.txt
          destination: dependencias-obsoletas
      - slack/notify:
          event: always
          channel: general-procesosdesoftware
          custom: |
            {
              "text": ":warning: Se verificaron paquetes desactualizados en `calculadora-proyecto`. Verifica el archivo `outdated.txt`."
            }

workflows:
  version: 2
  test-workflow:
    jobs:
      - test:
          post-steps:
            - slack/notify:
                event: pass
                channel: general-procesosdesoftware
                custom: |
                  {
                    "text": ":white_check_mark: ¡Pipeline *PASÓ*! Proyecto `calculadora-proyecto` en rama `<< pipeline.git.branch >>` :rocket:"
                  }
            - slack/no
