version: 2.1

orbs:
  slack: circleci/slack@4.12.5

jobs:
  crear-entorno:
    docker:
      - image: cimg/python:3.12
    steps:
      - checkout
      - run:
          name: Crear entorno virtual e instalar dependencias
          command: |
            python -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
            pip install flake8 coverage
      - persist_to_workspace:
          root: .
          paths:
            - venv
            - .

  pruebas:
    docker:
      - image: cimg/python:3.12
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Ejecutar pruebas con coverage
          command: |
            . venv/bin/activate
            coverage run -m pytest
      - persist_to_workspace:  # üîÅ Persistir archivo .coverage
          root: .
          paths:
            - .coverage
      - slack/notify:
          event: fail
          custom: |
            {
              "channel": "#estudiante",
              "text": ":x: *Pruebas Fallidas* en `calculadora-proyecto` (rama: `<< pipeline.git.branch >>`)"
            }
      - slack/notify:
          event: pass
          custom: |
            {
              "channel": "#estudiante",
              "text": ":white_check_mark: *Pruebas exitosas* en `calculadora-proyecto` (rama: `<< pipeline.git.branch >>`)"
            }

  cobertura-html:
    docker:
      - image: cimg/python:3.12
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Generar reporte HTML de cobertura
          command: |
            . venv/bin/activate
            coverage html
      - store_artifacts:
          path: htmlcov
          destination: coverage-report
      - slack/notify:
          event: always
          custom: |
            {
              "channel": "#general-procesosdesoftware",
              "text": ":bar_chart: *Reporte de cobertura generado* para `calculadora-proyecto`."
            }

  analisis-flake8:
    docker:
      - image: cimg/python:3.12
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Ejecutar an√°lisis de c√≥digo con flake8
          command:
