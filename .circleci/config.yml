version: 2.1

orbs:
  slack: circleci/slack@4.12.5

jobs:
  crear-entorno:
    docker:
      - image: cimg/python:3.12
    steps:
      - checkout
      - run:
          name: Crear entorno virtual e instalar dependencias
          command: |
            python -m venv venv
            . venv/bin/activate
            pip install -r requirements.txt
      - persist_to_workspace:
          root: .
          paths:
            - venv
            - .

  pruebas:
    docker:
      - image: cimg/python:3.12
    parallelism: 2
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Ejecutar pruebas con coverage
          command: |
            . venv/bin/activate
            coverage run --source=calculadora -m pytest
      - persist_to_workspace:
          root: .
          paths:
            - .coverage
      - slack/notify:
          event: fail
          channel: "#estudiante"
          custom: |
            {
              "text": ":x: *Pruebas Fallidas* en `calculadora-proyecto` (rama: `<< pipeline.git.branch >>`)"
            }
      - slack/notify:
          event: pass
          channel: "#estudiante"
          custom: |
            {
              "text": ":white_check_mark: *Pruebas exitosas* en `calculadora-proyecto` (rama: `<< pipeline.git.branch >>`)"
            }

  cobertura-html:
    docker:
      - image: cimg/python:3.12
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Generar reporte HTML de cobertura
          command: |
            . venv/bin/activate
            coverage html --ignore-errors
      - store_artifacts:
          path: htmlcov
          destination: coverage-report
      - slack/notify:
          event: always
          channel: "#general-procesosdesoftware"
          custom: |
            {
              "text": ":bar_chart: Se ha generado el *reporte de cobertura* del proyecto `calculadora-proyecto`."
            }

  resumen-cobertura:
    docker:
      - image: cimg/python:3.12
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Mostrar resumen de cobertura en consola
          command: |
            . venv/bin/activate
            coverage report

  analisis-flake8:
    docker:
      - image: cimg/python:3.12
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Ejecutar análisis de código con flake8
          command: |
            . venv/bin/activate
            pip install flake8
            flake8 . --exit-zero
      - slack/notify:
          event: always
          channel: "#general-procesosdesoftware"
          custom: |
            {
              "text": ":mag: *flake8 ejecutado* en `calculadora-proyecto`. Revisa posibles advertencias o errores de formato."
            }

workflows:
  version: 2
  workflow-paralelo:
    jobs:
      - crear-entorno
      - pruebas:
          requires:
            - crear-entorno
      - cobertura-html:
          requires:
            - crear-entorno
      - resumen-cobertura:
          requires:
            - crear-entorno
      - analisis-flake8:
          requires:
            - crear-entorno
